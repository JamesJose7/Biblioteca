package registro.view;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultCellEditor;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JFormattedTextField;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.SpinnerDateModel;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableColumn;
import javax.swing.text.DefaultFormatter;
import javax.swing.text.TableView;
import registro.model.Alumno;
import registro.model.Docente;
import registro.model.Libro;
import registro.model.MaterialBibliografico;
import registro.model.Persona;
import registro.model.Prestamo;
import registro.model.Revista;
import registro.model.Tesis;
import registro.controller.DBManager;
import registro.controller.DBPrestamos;

public class GUI extends javax.swing.JFrame {

    private DBManager mDBManager;

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();

        initialLayout();
        addCloseOperation();

        mDBManager = new DBManager();

        try {
            //Open connection
            mDBManager.openConnection();
            System.out.println("Connecting to Database...");

            //import data
            mDBManager.importMaterial();
            mDBManager.importPersonas();
            mDBManager.importPrestamos();
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (SQLException e) {
            System.out.println("Error 501, Connection failed");
            JOptionPane.showMessageDialog(null, "Connection to database failed");
            e.printStackTrace();
        }

        //Spinner Config
        JComponent comp = mesDevolucionSpinner.getEditor();
        JFormattedTextField field = (JFormattedTextField) comp.getComponent(0);
        DefaultFormatter formatter = (DefaultFormatter) field.getFormatter();
        formatter.setCommitsOnValidEdit(true);
        mesDevolucionSpinner.addChangeListener(new ChangeListener() {

            @Override
            public void stateChanged(ChangeEvent e) {
                int value = (int) mesDevolucionSpinner.getValue();

                if (value >= 13) {
                    mesDevolucionSpinner.setValue(1);
                } else if (value <= 0) {
                    mesDevolucionSpinner.setValue(12);
                }
            }
        });

        JComponent comp2 = diaDevolucionSpinner.getEditor();
        JFormattedTextField field2 = (JFormattedTextField) comp2.getComponent(0);
        DefaultFormatter formatter2 = (DefaultFormatter) field2.getFormatter();
        formatter2.setCommitsOnValidEdit(true);
        diaDevolucionSpinner.addChangeListener(new ChangeListener() {

            @Override
            public void stateChanged(ChangeEvent e) {
                int value = (int) diaDevolucionSpinner.getValue();

                if (value >= 32) {
                    diaDevolucionSpinner.setValue(1);
                } else if (value <= 0) {
                    diaDevolucionSpinner.setValue(31);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        registroPersonasPanel = new javax.swing.JPanel();
        tipoPersonaCombBox = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        atributoPersonaLabel = new javax.swing.JLabel();
        nombresPersonaField = new javax.swing.JTextField();
        correoPersonaField = new javax.swing.JTextField();
        telefonoPersonaField = new javax.swing.JTextField();
        atributoPersonaField = new javax.swing.JTextField();
        registrarPersonaBtn = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        reportePersonasPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        reportePersonas = new javax.swing.JTable();
        jLabel22 = new javax.swing.JLabel();
        eliminarMaterialBtn1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        nRegistrosPersonasTxtF = new javax.swing.JTextField();
        registroPrestamosPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        materialesTable = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        personasTable = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        agregarMaterialBtn = new javax.swing.JButton();
        agregarPersonaBtn = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        showMaterialBCmBx = new javax.swing.JComboBox();
        showPersonaField = new javax.swing.JTextField();
        registrarPrestamoBtn = new javax.swing.JButton();
        estadoCmBx = new javax.swing.JComboBox();
        anioDevolucionSpinner = new javax.swing.JSpinner();
        mesDevolucionSpinner = new javax.swing.JSpinner();
        diaDevolucionSpinner = new javax.swing.JSpinner();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        observacionesTxtField = new javax.swing.JTextArea();
        reportePrestamosPanel = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        prestamoMaterialTable = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        reportePrestamosTable = new javax.swing.JTable();
        nRegistrosPrestamosTxtF = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        reporteMaterialPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        reporteMaterialTable = new javax.swing.JTable();
        jLabel20 = new javax.swing.JLabel();
        eliminarMaterialBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        nRegistrosMaterialesTxtF = new javax.swing.JTextField();
        registroMaterialPanel = new javax.swing.JPanel();
        tipoMaterialCombBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        atributoMaterialLabel = new javax.swing.JLabel();
        autorMaterialField = new javax.swing.JTextField();
        tituloMaterialField = new javax.swing.JTextField();
        anioMaterialField = new javax.swing.JTextField();
        atributoMaterialField = new javax.swing.JTextField();
        registrarMaterialBtn = new javax.swing.JButton();
        estatusMaterialCombBox = new javax.swing.JComboBox();
        jLabel24 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Biblioteca");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(659, 560));

        registroPersonasPanel.setMinimumSize(new java.awt.Dimension(659, 529));
        registroPersonasPanel.setPreferredSize(new java.awt.Dimension(659, 529));

        tipoPersonaCombBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Alumno", "Docente" }));
        tipoPersonaCombBox.setMaximumSize(new java.awt.Dimension(65, 27));
        tipoPersonaCombBox.setMinimumSize(new java.awt.Dimension(65, 27));
        tipoPersonaCombBox.setPreferredSize(new java.awt.Dimension(65, 27));
        tipoPersonaCombBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoPersonaCombBoxActionPerformed(evt);
            }
        });

        jLabel7.setText("Nombres");

        jLabel8.setText("Correo");

        jLabel9.setText("Tel√©fono");

        atributoPersonaLabel.setText("placeh");

        nombresPersonaField.setMaximumSize(new java.awt.Dimension(6, 20));
        nombresPersonaField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombresPersonaFieldActionPerformed(evt);
            }
        });

        correoPersonaField.setMaximumSize(new java.awt.Dimension(6, 20));

        telefonoPersonaField.setMaximumSize(new java.awt.Dimension(6, 20));

        atributoPersonaField.setMaximumSize(new java.awt.Dimension(6, 20));
        atributoPersonaField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atributoPersonaFieldActionPerformed(evt);
            }
        });

        registrarPersonaBtn.setText("Registrar");
        registrarPersonaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarPersonaBtnActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel23.setText("Registrar Personas");

        javax.swing.GroupLayout registroPersonasPanelLayout = new javax.swing.GroupLayout(registroPersonasPanel);
        registroPersonasPanel.setLayout(registroPersonasPanelLayout);
        registroPersonasPanelLayout.setHorizontalGroup(
            registroPersonasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registroPersonasPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(registroPersonasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tipoPersonaCombBox, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23)
                    .addGroup(registroPersonasPanelLayout.createSequentialGroup()
                        .addGroup(registroPersonasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(atributoPersonaLabel))
                        .addGap(32, 32, 32)
                        .addGroup(registroPersonasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(registrarPersonaBtn)
                            .addGroup(registroPersonasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(nombresPersonaField, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                                .addComponent(atributoPersonaField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(correoPersonaField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(telefonoPersonaField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(366, 366, 366))
        );
        registroPersonasPanelLayout.setVerticalGroup(
            registroPersonasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registroPersonasPanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel23)
                .addGap(18, 18, 18)
                .addComponent(tipoPersonaCombBox, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64)
                .addGroup(registroPersonasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(nombresPersonaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(registroPersonasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(correoPersonaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(registroPersonasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(telefonoPersonaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(registroPersonasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(atributoPersonaLabel)
                    .addComponent(atributoPersonaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(registrarPersonaBtn)
                .addContainerGap(173, Short.MAX_VALUE))
        );

        reportePersonasPanel.setMinimumSize(new java.awt.Dimension(659, 529));
        reportePersonasPanel.setPreferredSize(new java.awt.Dimension(659, 529));

        reportePersonas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(reportePersonas);

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel22.setText("Personas Registradas");

        eliminarMaterialBtn1.setText("Eliminar");
        eliminarMaterialBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarMaterialBtn1ActionPerformed(evt);
            }
        });

        jLabel6.setText("Resultados econtrados:");

        nRegistrosPersonasTxtF.setEditable(false);
        nRegistrosPersonasTxtF.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        javax.swing.GroupLayout reportePersonasPanelLayout = new javax.swing.GroupLayout(reportePersonasPanel);
        reportePersonasPanel.setLayout(reportePersonasPanelLayout);
        reportePersonasPanelLayout.setHorizontalGroup(
            reportePersonasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, reportePersonasPanelLayout.createSequentialGroup()
                .addContainerGap(233, Short.MAX_VALUE)
                .addComponent(jLabel22)
                .addContainerGap(232, Short.MAX_VALUE))
            .addGroup(reportePersonasPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(reportePersonasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(reportePersonasPanelLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nRegistrosPersonasTxtF, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(eliminarMaterialBtn1))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 633, Short.MAX_VALUE))
                .addGap(16, 16, 16))
        );
        reportePersonasPanelLayout.setVerticalGroup(
            reportePersonasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reportePersonasPanelLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel22)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(reportePersonasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eliminarMaterialBtn1)
                    .addComponent(jLabel6)
                    .addComponent(nRegistrosPersonasTxtF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        registroPrestamosPanel.setMinimumSize(new java.awt.Dimension(659, 529));
        registroPrestamosPanel.setPreferredSize(new java.awt.Dimension(659, 529));

        materialesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(materialesTable);

        personasTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(personasTable);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Material Bibliogr√°fico");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Personas");

        agregarMaterialBtn.setText("Seleccionar Material");
        agregarMaterialBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarMaterialBtnActionPerformed(evt);
            }
        });

        agregarPersonaBtn.setText("Seleccionar Persona");
        agregarPersonaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarPersonaBtnActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel12.setText("Registro Pr√©stamo");

        jLabel13.setText("Material Bibliogr√°fico");

        jLabel14.setText("Persona");

        jLabel17.setText("Fecha Devoluci√≥n");

        jLabel18.setText("Estado");

        jLabel19.setText("Observaciones");

        showMaterialBCmBx.setToolTipText("");
        showMaterialBCmBx.setMaximumSize(new java.awt.Dimension(28, 20));

        showPersonaField.setEditable(false);
        showPersonaField.setMaximumSize(new java.awt.Dimension(6, 20));

        registrarPrestamoBtn.setText("Registrar Pr√©stamo");
        registrarPrestamoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarPrestamoBtnActionPerformed(evt);
            }
        });

        estadoCmBx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Prestado", "Devuelto" }));

        anioDevolucionSpinner.setModel(new javax.swing.SpinnerNumberModel(2000, 2000, 2000, 1));

        mesDevolucionSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 0, 13, 1));

        diaDevolucionSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 0, 32, 1));

        jLabel25.setText("A√±o");

        jLabel26.setText("Mes");

        jLabel27.setText("D√≠a");

        observacionesTxtField.setColumns(20);
        observacionesTxtField.setRows(5);
        jScrollPane5.setViewportView(observacionesTxtField);

        javax.swing.GroupLayout registroPrestamosPanelLayout = new javax.swing.GroupLayout(registroPrestamosPanel);
        registroPrestamosPanel.setLayout(registroPrestamosPanelLayout);
        registroPrestamosPanelLayout.setHorizontalGroup(
            registroPrestamosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registroPrestamosPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(registroPrestamosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(registroPrestamosPanelLayout.createSequentialGroup()
                        .addGroup(registroPrestamosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14)
                            .addComponent(jLabel19))
                        .addGap(4, 4, 4)
                        .addGroup(registroPrestamosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(showMaterialBCmBx, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(showPersonaField, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane5)))
                    .addComponent(jLabel12)
                    .addGroup(registroPrestamosPanelLayout.createSequentialGroup()
                        .addGroup(registroPrestamosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(18, 18, 18)
                        .addGroup(registroPrestamosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel11)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(registroPrestamosPanelLayout.createSequentialGroup()
                                .addGroup(registroPrestamosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel18))
                                .addGap(18, 18, 18)
                                .addGroup(registroPrestamosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(estadoCmBx, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, registroPrestamosPanelLayout.createSequentialGroup()
                                        .addGroup(registroPrestamosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(anioDevolucionSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel25))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(registroPrestamosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(mesDevolucionSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel26))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(registroPrestamosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(diaDevolucionSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))))))
                .addGap(23, 23, 23))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, registroPrestamosPanelLayout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addComponent(agregarMaterialBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(agregarPersonaBtn)
                .addGap(105, 105, 105))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, registroPrestamosPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(registrarPrestamoBtn)
                .addGap(249, 249, 249))
        );
        registroPrestamosPanelLayout.setVerticalGroup(
            registroPrestamosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registroPrestamosPanelLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(registroPrestamosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(registroPrestamosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(registroPrestamosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agregarMaterialBtn)
                    .addComponent(agregarPersonaBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12)
                .addGap(3, 3, 3)
                .addGroup(registroPrestamosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(jLabel26)
                    .addComponent(jLabel27))
                .addGap(1, 1, 1)
                .addGroup(registroPrestamosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel17)
                    .addComponent(showMaterialBCmBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(anioDevolucionSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mesDevolucionSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(diaDevolucionSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(registroPrestamosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel18)
                    .addComponent(showPersonaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(estadoCmBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(registroPrestamosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(registrarPrestamoBtn)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        reportePrestamosPanel.setMinimumSize(new java.awt.Dimension(659, 529));
        reportePrestamosPanel.setPreferredSize(new java.awt.Dimension(659, 529));

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel21.setText("Registro de Pr√©stamos");

        prestamoMaterialTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane6.setViewportView(prestamoMaterialTable);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel15.setText("Material Bibliogr√°fico");

        reportePrestamosTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        reportePrestamosTable.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                reportePrestamosTableMouseDragged(evt);
            }
        });
        reportePrestamosTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reportePrestamosTableMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(reportePrestamosTable);

        nRegistrosPrestamosTxtF.setEditable(false);

        jLabel16.setText("Resultados Encontrados:");

        javax.swing.GroupLayout reportePrestamosPanelLayout = new javax.swing.GroupLayout(reportePrestamosPanel);
        reportePrestamosPanel.setLayout(reportePrestamosPanelLayout);
        reportePrestamosPanelLayout.setHorizontalGroup(
            reportePrestamosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reportePrestamosPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(reportePrestamosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 639, Short.MAX_VALUE)
                    .addGroup(reportePrestamosPanelLayout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nRegistrosPrestamosTxtF, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80)
                        .addComponent(jLabel15)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(reportePrestamosPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel21)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        reportePrestamosPanelLayout.setVerticalGroup(
            reportePrestamosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reportePrestamosPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel21)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(reportePrestamosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(nRegistrosPrestamosTxtF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(5, Short.MAX_VALUE))
        );

        reporteMaterialPanel.setMinimumSize(new java.awt.Dimension(659, 529));
        reporteMaterialPanel.setPreferredSize(new java.awt.Dimension(659, 529));

        reporteMaterialTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(reporteMaterialTable);

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel20.setText("Material Bibliogr√°fico");

        eliminarMaterialBtn.setText("Eliminar");
        eliminarMaterialBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarMaterialBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Resultados econtrados:");

        nRegistrosMaterialesTxtF.setEditable(false);
        nRegistrosMaterialesTxtF.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        javax.swing.GroupLayout reporteMaterialPanelLayout = new javax.swing.GroupLayout(reporteMaterialPanel);
        reporteMaterialPanel.setLayout(reporteMaterialPanelLayout);
        reporteMaterialPanelLayout.setHorizontalGroup(
            reporteMaterialPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reporteMaterialPanelLayout.createSequentialGroup()
                .addContainerGap(234, Short.MAX_VALUE)
                .addComponent(jLabel20)
                .addContainerGap(234, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, reporteMaterialPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(reporteMaterialPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(reporteMaterialPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nRegistrosMaterialesTxtF, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(eliminarMaterialBtn))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 633, Short.MAX_VALUE))
                .addGap(16, 16, 16))
        );
        reporteMaterialPanelLayout.setVerticalGroup(
            reporteMaterialPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reporteMaterialPanelLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel20)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(reporteMaterialPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eliminarMaterialBtn)
                    .addComponent(jLabel1)
                    .addComponent(nRegistrosMaterialesTxtF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        registroMaterialPanel.setMinimumSize(new java.awt.Dimension(659, 529));
        registroMaterialPanel.setPreferredSize(new java.awt.Dimension(659, 529));

        tipoMaterialCombBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Libro", "Revista", "Tesis" }));
        tipoMaterialCombBox.setMaximumSize(new java.awt.Dimension(65, 27));
        tipoMaterialCombBox.setMinimumSize(new java.awt.Dimension(65, 27));
        tipoMaterialCombBox.setPreferredSize(new java.awt.Dimension(65, 27));
        tipoMaterialCombBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoMaterialCombBoxActionPerformed(evt);
            }
        });

        jLabel2.setText("Autor");

        jLabel3.setText("Titulo");

        jLabel4.setText("A√±o");

        jLabel5.setText("Estatus");

        atributoMaterialLabel.setText("placeh");

        registrarMaterialBtn.setText("Registrar");
        registrarMaterialBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarMaterialBtnActionPerformed(evt);
            }
        });

        estatusMaterialCombBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Activo", "No Activo" }));

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel24.setText("Registro de Material Bibliogr√°fico");

        javax.swing.GroupLayout registroMaterialPanelLayout = new javax.swing.GroupLayout(registroMaterialPanel);
        registroMaterialPanel.setLayout(registroMaterialPanelLayout);
        registroMaterialPanelLayout.setHorizontalGroup(
            registroMaterialPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registroMaterialPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(registroMaterialPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(registroMaterialPanelLayout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, registroMaterialPanelLayout.createSequentialGroup()
                        .addGroup(registroMaterialPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tipoMaterialCombBox, 0, 262, Short.MAX_VALUE)
                            .addGroup(registroMaterialPanelLayout.createSequentialGroup()
                                .addGroup(registroMaterialPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5)
                                    .addComponent(atributoMaterialLabel)
                                    .addComponent(jLabel2))
                                .addGap(32, 32, 32)
                                .addGroup(registroMaterialPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(registrarMaterialBtn)
                                    .addComponent(tituloMaterialField)
                                    .addComponent(anioMaterialField)
                                    .addComponent(atributoMaterialField)
                                    .addComponent(estatusMaterialCombBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(autorMaterialField))))
                        .addGap(366, 366, 366))))
        );
        registroMaterialPanelLayout.setVerticalGroup(
            registroMaterialPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registroMaterialPanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel24)
                .addGap(18, 18, 18)
                .addComponent(tipoMaterialCombBox, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addGroup(registroMaterialPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(autorMaterialField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(registroMaterialPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tituloMaterialField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(registroMaterialPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(anioMaterialField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(registroMaterialPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(estatusMaterialCombBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(registroMaterialPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(atributoMaterialLabel)
                    .addComponent(atributoMaterialField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(registrarMaterialBtn)
                .addContainerGap(145, Short.MAX_VALUE))
        );

        jMenu1.setText("Material");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/pencil-striped-symbol-for-interface-edit-buttons.png"))); // NOI18N
        jMenuItem1.setText("Registro de Material");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/menu.png"))); // NOI18N
        jMenuItem2.setText("Reporte de Material");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Personas");

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/pencil-striped-symbol-for-interface-edit-buttons.png"))); // NOI18N
        jMenuItem3.setText("Registro de Personas");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/menu.png"))); // NOI18N
        jMenuItem4.setText("Reporte de Personas");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Prestamos");

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/pencil-striped-symbol-for-interface-edit-buttons.png"))); // NOI18N
        jMenuItem5.setText("Registro de prestamos");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem5);

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/menu.png"))); // NOI18N
        jMenuItem6.setText("Reporte de Prestamos");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem6);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(registroMaterialPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(reporteMaterialPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(registroPrestamosPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(reportePrestamosPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(registroPersonasPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(reportePersonasPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(registroMaterialPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(reporteMaterialPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(registroPrestamosPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(reportePrestamosPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(registroPersonasPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(reportePersonasPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        switchToRegMaterial();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void registrarMaterialBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarMaterialBtnActionPerformed
        registrarMaterial();
    }//GEN-LAST:event_registrarMaterialBtnActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        switchToRepMaterial();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        switchToRegPersonas();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        switchToRepPersonas();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        switchToRegPrestamos();
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        switchToRepPrestamos();
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void tipoMaterialCombBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoMaterialCombBoxActionPerformed
        cambiarMaterial();
    }//GEN-LAST:event_tipoMaterialCombBoxActionPerformed

    private void tipoPersonaCombBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoPersonaCombBoxActionPerformed
        cambiarPersona();
    }//GEN-LAST:event_tipoPersonaCombBoxActionPerformed

    private void registrarPersonaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarPersonaBtnActionPerformed
        registrarPersona();
    }//GEN-LAST:event_registrarPersonaBtnActionPerformed

    private void agregarMaterialBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarMaterialBtnActionPerformed
        addMaterialBibliograficoDisponibles();
    }//GEN-LAST:event_agregarMaterialBtnActionPerformed

    private void agregarPersonaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarPersonaBtnActionPerformed
        addPersonasDisponibles();
    }//GEN-LAST:event_agregarPersonaBtnActionPerformed

    private void registrarPrestamoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarPrestamoBtnActionPerformed
        registrarPrestamo();
    }//GEN-LAST:event_registrarPrestamoBtnActionPerformed

    private void eliminarMaterialBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarMaterialBtnActionPerformed
        eliminarMaterial();
    }//GEN-LAST:event_eliminarMaterialBtnActionPerformed

    private void eliminarMaterialBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarMaterialBtn1ActionPerformed
        eliminarPersonas();
    }//GEN-LAST:event_eliminarMaterialBtn1ActionPerformed

    private void nombresPersonaFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombresPersonaFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombresPersonaFieldActionPerformed

    private void atributoPersonaFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atributoPersonaFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_atributoPersonaFieldActionPerformed

    private void reportePrestamosTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportePrestamosTableMouseClicked
        displayMaterialPrestamo();
    }//GEN-LAST:event_reportePrestamosTableMouseClicked

    private void reportePrestamosTableMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportePrestamosTableMouseDragged
        displayMaterialPrestamo();
    }//GEN-LAST:event_reportePrestamosTableMouseDragged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GUI gui = new GUI();
                gui.setLocationRelativeTo(null);
                gui.setVisible(true);
            }
        });
    }

    private void addCloseOperation() {
        this.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                closeWindow();
            }
        });
    }

    private void closeWindow() {
        if (JOptionPane.showConfirmDialog(null,
                "Are you sure to close this window?", "Really Closing?",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {

            try {
                mDBManager.closeConnection();
                System.out.println("Closing connection");
            } catch (SQLException e) {
                e.printStackTrace();
            } catch (NullPointerException e) {
                System.out.println("No connection established");
                System.exit(0);
            }

            System.exit(0);
        }
    }

    //Material
    private void registrarMaterial() {
        String tipo = tipoMaterialCombBox.getSelectedItem().toString();

        String autor = autorMaterialField.getText();
        String titulo = tituloMaterialField.getText();
        int anio = Integer.parseInt(anioMaterialField.getText());
        boolean estatus = getMaterialEstatus();

        int succes = 0;

        try {
            if (tipo.equals("Libro")) {
                String editorial = atributoMaterialField.getText();

                succes = mDBManager.insertMaterial(new Libro(autor, titulo, anio, estatus, editorial));
            } else if (tipo.equals("Revista")) {
                int numero = Integer.parseInt(atributoMaterialField.getText());

                succes = mDBManager.insertMaterial(new Revista(autor, titulo, anio, estatus, numero));
            } else if (tipo.equals("Tesis")) {
                int codigoT = Integer.parseInt(atributoMaterialField.getText());

                succes = mDBManager.insertMaterial(new Tesis(autor, titulo, anio, estatus, codigoT));
            }

            if (succes == 1) {
                JOptionPane.showMessageDialog(null, "Se ha registrado el material");
            } else {
                JOptionPane.showMessageDialog(null, "Hubo un error al ingresar el material");
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Couldn't connect to database");
            //e.printStackTrace();
        }
        clearMaterialFields();
    }

    private boolean getMaterialEstatus() {
        String estatus = estatusMaterialCombBox.getSelectedItem().toString();

        if (estatus.equals("Activo")) {
            return true;
        } else {
            return false;
        }
    }

    private void cambiarMaterial() {
        String tipo = tipoMaterialCombBox.getSelectedItem().toString();

        if (tipo.equals("Libro")) {
            atributoMaterialLabel.setText("Editorial");
        } else if (tipo.equals("Revista")) {
            atributoMaterialLabel.setText("Numero");
        } else if (tipo.equals("Tesis")) {
            atributoMaterialLabel.setText("Codigo T");
        }
    }

    private void clearMaterialFields() {
        autorMaterialField.setText("");
        tituloMaterialField.setText("");
        anioMaterialField.setText("");
        atributoMaterialField.setText("");
    }

    private void reporteMaterial(JTable table) {
        //Update material
        try {
            mDBManager.importMaterial();
        } catch (SQLException e) {
            e.printStackTrace();
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        }

        String[] colsNames = {"Codigo", "Autor", "Titulo", "Anio", "Estatus", "", "Tipo"};

        DefaultTableModel model = new DefaultTableModel(colsNames, 0);

        for (MaterialBibliografico material : mDBManager.getMaterial()) {
            String[] dataMaterial = {
                material.getCodigo(),
                material.getAutor(),
                material.getTitulo(),
                material.getAnio() + "",
                getEstadoToString(material.getEstatus()),
                "",
                ""
            };

            switch (material.getClass().getSimpleName().toLowerCase()) {
                case MaterialBibliografico.LIBRO:
                    Libro libro = (Libro) material;

                    dataMaterial[5] = libro.getEditorial();
                    dataMaterial[6] = MaterialBibliografico.LIBRO;

                    model.addRow(dataMaterial);
                    break;
                case MaterialBibliografico.REVISTA:
                    Revista revista = (Revista) material;

                    dataMaterial[5] = revista.getNumero() + "";
                    dataMaterial[6] = MaterialBibliografico.REVISTA;

                    model.addRow(dataMaterial);

                    break;
                case MaterialBibliografico.TESIS:
                    Tesis tesis = (Tesis) material;

                    dataMaterial[5] = tesis.getCodigoTesis() + "";
                    dataMaterial[6] = MaterialBibliografico.TESIS;

                    model.addRow(dataMaterial);
                    break;
                default:

            }
        }
        table.setModel(model);

        nRegistrosMaterialesTxtF.setText(mDBManager.getMaterial().size() + "");
    }

    private void eliminarMaterial() {
        int selectedRows[] = reporteMaterialTable.getSelectedRows();

        try {

            for (int row : selectedRows) {
                int id = Integer.valueOf(reporteMaterialTable.getValueAt(row, 0) + "");
                mDBManager.deleteMaterial(id);
            }

            reporteMaterial(reporteMaterialTable);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error connecting to database");
            e.printStackTrace();
        }

    }

    //PERSONAS
    private void registrarPersona() {
        String tipo = tipoPersonaCombBox.getSelectedItem().toString();

        String nombres = nombresPersonaField.getText();
        String correo = correoPersonaField.getText();
        String telefono = telefonoPersonaField.getText();

        try {
            if (tipo.equals("Alumno")) {
                String idMatricula = atributoPersonaField.getText();

                mDBManager.insertPersona(new Alumno(nombres, correo, telefono, idMatricula));
            } else if (tipo.equals("Docente")) {
                String codigoDocente = atributoPersonaField.getText();

                mDBManager.insertPersona(new Docente(nombres, correo, telefono, codigoDocente));
            }

            mDBManager.importPersonas();
            JOptionPane.showMessageDialog(null, "Persona registrada");
        } catch (SQLException e) {
            e.printStackTrace();
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        }
        clearPersonasFields();
    }

    private void clearPersonasFields() {
        nombresPersonaField.setText("");
        correoPersonaField.setText("");
        telefonoPersonaField.setText("");
        atributoPersonaField.setText("");
    }

    private void reportePersonas(JTable table) {
        //Update personas
        try {
            mDBManager.importPersonas();
        } catch (SQLException e) {
            e.printStackTrace();
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        }

        String[] colsNames = {"Identificacion", "Nombres", "Correo", "Telefono", "", "Tipo"};

        DefaultTableModel model = new DefaultTableModel(colsNames, 0);

        for (Persona persona : mDBManager.getPersonas()) {
            String[] dataPersona = {
                persona.getId(),
                persona.getNombres(),
                persona.getCorreo(),
                persona.getTelefono(),
                "",
                ""
            };

            switch (persona.getClass().getSimpleName().toLowerCase()) {
                case Persona.ALUMNO:
                    Alumno alumno = (Alumno) persona;

                    dataPersona[4] = alumno.getIdMatricula();
                    dataPersona[5] = Persona.ALUMNO;

                    model.addRow(dataPersona);
                    break;
                case Persona.DOCENTE:
                    Docente docente = (Docente) persona;

                    dataPersona[4] = docente.getCodigoDocente();
                    dataPersona[5] = Persona.DOCENTE;

                    model.addRow(dataPersona);
                    break;
                default:
            }
        }

        table.setModel(model);
        nRegistrosPersonasTxtF.setText(mDBManager.getPersonas().size() + "");
    }

    private void eliminarPersonas() {
        int selectedRows[] = reportePersonas.getSelectedRows();

        try {

            for (int row : selectedRows) {
                int id = Integer.valueOf(reportePersonas.getValueAt(row, 0) + "");
                mDBManager.deletePersona(id);
            }

            reportePersonas(reportePersonas);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error connecting to database");
            e.printStackTrace();
        }

    }

    private void cambiarPersona() {
        String tipo = tipoPersonaCombBox.getSelectedItem().toString();

        if (tipo.equals("Alumno")) {
            atributoPersonaLabel.setText("Matricula");
        } else if (tipo.equals("Docente")) {
            atributoPersonaLabel.setText("Cod Docente");
        }
    }

    /////////////////////////////////////////////////
    //PRESTAMOS
    private List<MaterialBibliografico> materialSeleccionado;
    private Persona personaSeleccionada;

    public void addMaterialBibliograficoDisponibles() {
        Map<Integer, JCheckBox> materialBChkBxs = new HashMap<>();

        JFrame mostrarMaterialesFrame = new JFrame();
        JButton agregarMaterialBtn;
        JPanel mostrarMaterialPanel;
        JScrollPane scrollPaneM;

        mostrarMaterialPanel = new JPanel();
        mostrarMaterialPanel.setLayout(new GridLayout(0, 1, 10, 10));
        scrollPaneM = new JScrollPane(mostrarMaterialPanel);
        //studiantesScrollPane = new JScrollPane(jPanel);
        agregarMaterialBtn = new JButton("Seleccionar Material");
        agregarMaterialBtn.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                materialSeleccionado = new ArrayList<>();
                for (Map.Entry<Integer, JCheckBox> entry : materialBChkBxs.entrySet()) {
                    if (entry.getValue().isSelected()) {
                        agregarMaterialPrestamo(entry.getKey());
                    }
                }
                mostrarMaterialesFrame.setVisible(false);
                cargarMaterialPrestamo();
            }
        });

        materialBChkBxs.clear();
        for (MaterialBibliografico material : mDBManager.getMaterial()) {
            JCheckBox cb = new JCheckBox(material.getTitulo());
            materialBChkBxs.put(Integer.parseInt(material.getCodigo()), cb);
            mostrarMaterialPanel.add(cb);
            mostrarMaterialPanel.revalidate();
            mostrarMaterialPanel.repaint();
        }

        mostrarMaterialesFrame.add(scrollPaneM);
        mostrarMaterialesFrame.add(agregarMaterialBtn, BorderLayout.SOUTH);
        mostrarMaterialesFrame.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        mostrarMaterialesFrame.setSize(300, 500);
        mostrarMaterialesFrame.setLocationRelativeTo(null);
        mostrarMaterialesFrame.setVisible(true);
    }

    private void agregarMaterialPrestamo(int idMaterial) {
        materialSeleccionado.add(mDBManager.getMaterialById(idMaterial));
    }

    private void cargarMaterialPrestamo() {
        showMaterialBCmBx.removeAllItems();

        for (MaterialBibliografico material : materialSeleccionado) {
            showMaterialBCmBx.addItem(material.getTitulo());
        }
    }

    public void addPersonasDisponibles() {
        List<JRadioButton> personasRdBtns = new ArrayList<>();

        JFrame mostrarPersonasFrame = new JFrame();
        JButton agregarPersonaBtn;
        JPanel mostrarPersonaPanel;
        JScrollPane scrollPaneP;

        mostrarPersonaPanel = new JPanel();
        mostrarPersonaPanel.setLayout(new GridLayout(0, 1, 10, 10));
        scrollPaneP = new JScrollPane(mostrarPersonaPanel);
        //estudiantesScrollPane = new JScrollPane(jPanel);
        agregarPersonaBtn = new JButton("Seleccionar Persona");
        agregarPersonaBtn.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                for (JRadioButton rb : personasRdBtns) {
                    if (rb.isSelected()) {
                        //System.out.println(rb.getText());
                        setPersonaPrestamo(rb.getText());
                    }
                }
                mostrarPersonasFrame.setVisible(false);
                cargarPersonaPrestamo();
            }
        });

        personasRdBtns.clear();
        for (Persona persona : mDBManager.getPersonas()) {
            JRadioButton rb = new JRadioButton(persona.getNombres());
            rb.addActionListener(new ActionListener() {

                @Override
                public void actionPerformed(ActionEvent e) {
                    for (JRadioButton radioBtn : personasRdBtns) {
                        if (!rb.equals(radioBtn)) {
                            radioBtn.setSelected(false);
                        }
                    }
                }
            });

            personasRdBtns.add(rb);
            mostrarPersonaPanel.add(rb);
            mostrarPersonaPanel.revalidate();
            mostrarPersonaPanel.repaint();
        }

        mostrarPersonasFrame.add(scrollPaneP);
        mostrarPersonasFrame.add(agregarPersonaBtn, BorderLayout.SOUTH);
        mostrarPersonasFrame.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        mostrarPersonasFrame.setSize(300, 500);
        mostrarPersonasFrame.setLocationRelativeTo(null);
        mostrarPersonasFrame.setVisible(true);
    }

    private void setPersonaPrestamo(String nombre) {
        for (Persona persona : mDBManager.getPersonas()) {
            if (nombre.equals(persona.getNombres())) {
                personaSeleccionada = persona;
            }
        }
    }

    private void cargarPersonaPrestamo() {
        showPersonaField.setText(personaSeleccionada.getNombres());
    }

    private void cargarDatosTablas() {
        String[] colsMateriales = {"C√≥digo", "T√≠tulo", "Autor", "Anio"};
        String[] colsPersonas = {"ID", "Nombres", "Tel√©fono"};

        DefaultTableModel modelMateriales = new DefaultTableModel(colsMateriales, 0);
        DefaultTableModel modelPersonas = new DefaultTableModel(colsPersonas, 0);

        for (MaterialBibliografico material : mDBManager.getMaterial()) {
            String[] data = {
                material.getCodigo(),
                material.getTitulo(),
                material.getAutor(),
                material.getAnio() + ""
            };

            modelMateriales.addRow(data);
        }

        for (Persona persona : mDBManager.getPersonas()) {
            String[] data = {
                persona.getId(),
                persona.getNombres(),
                persona.getTelefono()
            };

            modelPersonas.addRow(data);
        }

        materialesTable.setModel(modelMateriales);
        personasTable.setModel(modelPersonas);
    }

    private void registrarPrestamo() {
        if (!fieldsAreEmpty()) {

            try {
                //Date fechaPrestamo = new Date(fechaTxtField.getText());
                String formattedFecha = String.format("%s/%s/%s",
                        anioDevolucionSpinner.getValue() + "",
                        mesDevolucionSpinner.getValue() + "",
                        diaDevolucionSpinner.getValue() + "");
                Date fechaDevolucion = new Date(formattedFecha);

                mDBManager.insertPrestamo(new Prestamo(materialSeleccionado,
                        personaSeleccionada,
                        new Date(), fechaDevolucion,
                        getEstadoToBool(estadoCmBx.getSelectedItem().toString()),
                        observacionesTxtField.getText()));

                resetSpinners();
                JOptionPane.showMessageDialog(null, "Prestamo registrado");
            } catch (SQLException e) {
                e.printStackTrace();
            } catch (ClassNotFoundException e) {
                e.printStackTrace();
            }
            clearFields();

        } else {
            JOptionPane.showMessageDialog(null, "Todos los campos son obligatorios");
        }
    }

    private void clearFields() {
        showMaterialBCmBx.removeAllItems();
        showPersonaField.setText("");
        observacionesTxtField.setText("");
    }

    private boolean fieldsAreEmpty() {
        if (showMaterialBCmBx.getSelectedIndex() == -1
                || showPersonaField.getText().isEmpty()
                || observacionesTxtField.getText().isEmpty()) {
            return true;
        }
        return false;
    }

    private void reportePrestamos() {

        String[] colsNames = {"Codigo",
            "Fecha Prestamo",
            "Fecha Devoluci√≥n",
            "Estado",
            "Observaciones",
            "Nombre",
            "Correo",
            "Telefono"
        };

        DefaultTableModel model = new DefaultTableModel(colsNames, 0);

        for (Prestamo prestamo : mDBManager.getPrestamos()) {
            Persona persona = prestamo.getPersona();

            String[] data = {
                prestamo.getCodigo(),
                DBPrestamos.dateFormat.format(prestamo.getFecha()),
                DBPrestamos.dateFormat.format(prestamo.getFechaDevolucion()),
                getEstadoToString(prestamo.getEstatus()),
                prestamo.getObservaciones(),
                persona.getNombres(),
                persona.getCorreo(),
                persona.getTelefono()
            };
            model.addRow(data);

        }
        reportePrestamosTable.setModel(model);
        nRegistrosPrestamosTxtF.setText(mDBManager.getPrestamos().size() + "");

        //Materiales table
        String[] materialCols = {
            "Autor",
            "Titulo",
            "Anio",
            "Estado",
            "Tipo"};

        DefaultTableModel materialesModel = new DefaultTableModel(materialCols, 0);
        prestamoMaterialTable.setModel(materialesModel);
    }

    private void displayMaterialPrestamo() {
        int nSelectedRows = reportePrestamosTable.getSelectedRowCount();

        if (nSelectedRows == 1) {
            int rowI = reportePrestamosTable.getSelectedRow();
            int prestamoId = Integer.valueOf(reportePrestamosTable.getValueAt(rowI, 0) + "");

            String[] materialCols = {
                "Autor",
                "Titulo",
                "Anio",
                "Estado",
                "Tipo"};

            DefaultTableModel model = new DefaultTableModel(materialCols, 0);

            for (MaterialBibliografico material : mDBManager.getPrestamoById(prestamoId).getMateriales()) {
                String[] data = {
                    material.getAutor(),
                    material.getTitulo(),
                    material.getAnio() + "",
                    material.getEstatus() + "",
                    material.getClass().getSimpleName()
                };

                model.addRow(data);
            }

            prestamoMaterialTable.setModel(model);

        } else if (nSelectedRows > 1) {
            JOptionPane.showMessageDialog(null, "Seleccionar un solo prestamo por favor");
        }
    }

    ////////////////////////////////////////////////
    private void switchToRegMaterial() {
        initialLayout();
        registroMaterialPanel.setVisible(true);
        cambiarMaterial();
    }

    private void switchToRepMaterial() {
        initialLayout();
        reporteMaterialPanel.setVisible(true);

        reporteMaterial(reporteMaterialTable);
    }

    private void switchToRegPersonas() {
        initialLayout();
        registroPersonasPanel.setVisible(true);

        cambiarPersona();
    }

    private void switchToRepPersonas() {
        initialLayout();
        reportePersonasPanel.setVisible(true);

        reportePersonas(reportePersonas);
    }

    private void switchToRegPrestamos() {
        initialLayout();
        registroPrestamosPanel.setVisible(true);

        resetSpinners();

        cargarDatosTablas();
    }

    private void resetSpinners() {
        Date date = new Date();
        SimpleDateFormat anio = new SimpleDateFormat("yyyy");
        SimpleDateFormat mes = new SimpleDateFormat("MM");
        SimpleDateFormat dia = new SimpleDateFormat("dd");
        anioDevolucionSpinner.setValue(Integer.valueOf(anio.format(date)));
        mesDevolucionSpinner.setValue(Integer.valueOf(mes.format(date)));
        diaDevolucionSpinner.setValue(Integer.valueOf(dia.format(date)));
    }

    private void switchToRepPrestamos() {
        initialLayout();
        reportePrestamosPanel.setVisible(true);

        reportePrestamos();
    }

    private void initialLayout() {
        registroMaterialPanel.setVisible(false);
        reporteMaterialPanel.setVisible(false);
        registroPersonasPanel.setVisible(false);
        reportePersonasPanel.setVisible(false);
        registroPrestamosPanel.setVisible(false);
        reportePrestamosPanel.setVisible(false);
    }

    private String getEstadoToString(Boolean estado) {
        if (!estado) {
            return "Prestado";
        }
        return "Devuelto";
    }

    private boolean getEstadoToBool(String estado) {
        if (estado.equals("Prestado")) {
            return false;
        }
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregarMaterialBtn;
    private javax.swing.JButton agregarPersonaBtn;
    private javax.swing.JSpinner anioDevolucionSpinner;
    private javax.swing.JTextField anioMaterialField;
    private javax.swing.JTextField atributoMaterialField;
    private javax.swing.JLabel atributoMaterialLabel;
    private javax.swing.JTextField atributoPersonaField;
    private javax.swing.JLabel atributoPersonaLabel;
    private javax.swing.JTextField autorMaterialField;
    private javax.swing.JTextField correoPersonaField;
    private javax.swing.JSpinner diaDevolucionSpinner;
    private javax.swing.JButton eliminarMaterialBtn;
    private javax.swing.JButton eliminarMaterialBtn1;
    private javax.swing.JComboBox estadoCmBx;
    private javax.swing.JComboBox estatusMaterialCombBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTable materialesTable;
    private javax.swing.JSpinner mesDevolucionSpinner;
    private javax.swing.JTextField nRegistrosMaterialesTxtF;
    private javax.swing.JTextField nRegistrosPersonasTxtF;
    private javax.swing.JTextField nRegistrosPrestamosTxtF;
    private javax.swing.JTextField nombresPersonaField;
    private javax.swing.JTextArea observacionesTxtField;
    private javax.swing.JTable personasTable;
    private javax.swing.JTable prestamoMaterialTable;
    private javax.swing.JButton registrarMaterialBtn;
    private javax.swing.JButton registrarPersonaBtn;
    private javax.swing.JButton registrarPrestamoBtn;
    private javax.swing.JPanel registroMaterialPanel;
    private javax.swing.JPanel registroPersonasPanel;
    private javax.swing.JPanel registroPrestamosPanel;
    private javax.swing.JPanel reporteMaterialPanel;
    private javax.swing.JTable reporteMaterialTable;
    private javax.swing.JTable reportePersonas;
    private javax.swing.JPanel reportePersonasPanel;
    private javax.swing.JPanel reportePrestamosPanel;
    private javax.swing.JTable reportePrestamosTable;
    private javax.swing.JComboBox showMaterialBCmBx;
    private javax.swing.JTextField showPersonaField;
    private javax.swing.JTextField telefonoPersonaField;
    private javax.swing.JComboBox tipoMaterialCombBox;
    private javax.swing.JComboBox tipoPersonaCombBox;
    private javax.swing.JTextField tituloMaterialField;
    // End of variables declaration//GEN-END:variables
}
